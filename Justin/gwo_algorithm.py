# -*- coding: utf-8 -*-
"""GWO_modified.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dyZxLAoKsKTFRatG-WQ66CtjIQeqax6W
"""

import random

# Calculate the fitness of a particle
def fitness(particle, fitness_function):
	return fitness_function(particle)

# Update the position of a particle based on the positions of the alpha, beta, and delta wolves
def update_position(particle, alpha, beta, delta, bounds):
	new_position = []
	for p, a, b, d, (lower, upper) in zip(particle, alpha, beta, delta, bounds):
		x = a + random.uniform(-1, 1) * (abs(b - p) + abs(d - p))
		# Ensure that the updated position is within the bounds
		x = max(lower, x)
		x = min(upper, x)
		new_position.append(x)
	return new_position

# Run the grey wolf optimizer to find the optimal solution
def GWO(fitness_function, pop_size, intervals, max_iter, population=None):
	# Initialize the population with random particles within the specified intervals
	# or use the provided population if it is not None
	if population is None:
		population = [[random.uniform(intervals[i][0], intervals[i][1]) for i in range(len(intervals))] for _ in range(pop_size)]
	
	# Iterate over the maximum number of iterations
	for _ in range(max_iter):
		# Calculate the fitness of each particle
		fitnesses = [fitness(particle, fitness_function) for particle in population]
		
		# Sort the population by fitness
		population = [particle for _, particle in sorted(zip(fitnesses, population), key=lambda pair: pair[0])]
		
		# Select the alpha, beta, and delta wolves
		alpha = population[-1]
		beta = population[-2]
		delta = population[-3]
		
		# Update the position of each particle
		for i, particle in enumerate(population):
			if i != len(population) - 1:  # Don't update the position of the alpha wolf
				population[i] = update_position(particle, alpha, beta, delta, intervals)
	
	# Return the fittest particle, the entire population, and the fitnesses of each particle
	return population[-1], population, fitnesses